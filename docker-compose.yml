version: '3.8'

services:
  scraper1:
    build: .
    volumes:
      - ./users:/app/users
      - ./output:/app/output
    command: python scraping_anime.py users_1.txt
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  scraper2:
    build: .
    volumes:
      - ./users:/app/users
      - ./output:/app/output
    command: python scraping_anime.py users_2.txt
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  scraper3:
    build: .
    volumes:
      - ./users:/app/users
      - ./output:/app/output
    command: python scraping_anime.py users_3.txt
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  scraper4:
    build: .
    volumes:
      - ./users:/app/users
      - ./output:/app/output
    command: python scraping_anime.py users_4.txt
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  scraper5:
    build: .
    volumes:
      - ./users:/app/users
      - ./output:/app/output
    command: python scraping_anime.py users_5.txt
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  merger:
    build: .
    volumes:
      - ./output:/app/output
    command: ["sleep", "999999"]
    